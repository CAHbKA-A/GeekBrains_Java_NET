
Как организовать клиент-серверное взаимодействие?
Как и в каком виде передавать файлы?
Как пересылать большие файлы?
Как пересылать служебные команды?
Что хранить в базе данных?
Как передавать структуру каталогов/файлов?
Какую библиотеку использовать для сетевого взаимодействия: java.io, java.nio, Netty?



Реализация.
Фоновая синхронизация локальной папки клиента с папкой на сервере. С возможностью доступа через веб форму(когда необходимо выдернуть пару файлов, находясь далеко от своего пк)


java.nio, Netty?  сначала ознакомиться надо подрбнее. пока фокусируюсь на Netty


Серверная часть.

При создании пользователя (регистрации) создается локальная папка. в папке (а лучше в БД) создается
список параметров пользователя :
1. доступное место
2. имя папки (1 папка = 1 пользователь)
3. текущий объём папки
так же в бд кладем:
4. список файлов расшаренных для других пользователей.
5. СТруктура каталогов хранится в файле? думаю лучше б бд. чтение из бд будет быстрее, выборка. + атрибуты rw.
6. логирование

открываем 2 порта на пользователя: для обменов файлами и для служебной инфы.
всю служебную инфу от всех пользователей кладем в одну папку, чтобы можно было выстраивать их в очередь для обработки. Очередь равномерная для всех пользователей.

Подумать над пиритизацией служебных сообщений.

процессы:
1. монитор появления служебной инфы. работает всегда
2. обработчик папки служебной инфы. работает по триггеру предыдущего процесса.
3. сравнение каталогов
4. прием, файлов
5. передача фалов потоком


Клиентская часть.

первый запуск клиента gui интерфейс для авторизации.
далее приложение уходит в фон. Добавляем в автозапуск.
генерируем файл - ключ id, в папку.
Нужен второй ключ внутри какой-то левой папки, чтобы копирование(кража) id ключа не дала доступ к учетке.
Сканируем папку рекурсивно, создаем "слепок" содержимого. Вернее, список фалов.
Храним подробную структуру каталога(ов) в папке приложения.  для точного сравнения содержимого.
В каждой папке хранилища храним скрытый фаил, содержавший хэш. тут надо подобрать что будет выполняться быстрее
 1 вариант. Хеш= сумма размеров файлов*количество фалов.
 2 вариант. хеш = количество файлов
 3 вариант просто дату любого изменения в каталоге.

 нужен либо монитор папки либо периодический опрос содержимого. Логичнее монитор(не знаю как, но что то типа триггера при любом обращении к папке), чтобы
 сутками не пречитывать каталоги, когда никто ими не пользуется.


Большие файлы перед передачей  дробим, при получении сращиваем. Хранение полученных частей файлов – часов 5 для того, чтобы модно было докачать после обрывов связи?



Взаимодействие:
1.Размер папки после первого создания списка отправляем в виде файла на сервер. Или служебным сообщением
2. сравниваем размер
3. сравниваем каталоги
4. передаем файлы, попутно сравниваем или актуализируем списки фалов.






